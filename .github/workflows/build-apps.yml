name: Build Mobile Apps
on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch: # Allows manual triggering
jobs:
  build:
    runs-on: macos-latest # macOS runner is required for iOS builds
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x" # Specify your Flutter version
          channel: "stable" # or 'beta', depending on your needs
      - name: Install dependencies
        run: flutter pub get
      - name: Build Android APK
        run: flutter build apk --release
      - name: Build iOS (no codesigning)
        run: flutter build ios --release --no-codesign
      - name: Upload Android Build
        uses: actions/upload-artifact@v3
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/app-release.apk
      - name: Upload iOS Build
        uses: actions/upload-artifact@v3
        with:
          name: ios-release
          path: build/ios/iphoneos/Runner.app
      - name: Archive Android and iOS Builds
        run: |
          mkdir -p releases
          cp build/app/outputs/flutter-apk/app-release.apk releases/
          zip -r releases/ios-release.zip build/ios/iphoneos/Runner.app
      - name: Upload Archived Builds
        uses: actions/upload-artifact@v3
        with:
          name: mobile-releases
          path: releases/
  deploy_to_public_repo:
    needs: build
    # TODO: Put this back once everything is working
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main' No need fo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download mobile artifacts
        uses: actions/download-artifact@v3
        with:
          name: mobile-releases
          path: mobile-releases
      - name: Deploy to public repo
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git clone https://github.com/OldRustyDijkstra/pdf.git
          cd pdf
          rm -rf *
          cp -R ../mobile-releases/* ./  # Updated to use the correct path
          git add .
          git commit -m "Release ${{ github.sha }}"
          git push https://$GH_PAT@github.com/OldRustyDijkstra/pdf.git main
